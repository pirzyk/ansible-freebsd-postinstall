---
- name: "Syslogd: Debug fp_syslogd_debug={{ fp_syslogd_debug }}"
  when: fp_syslogd_debug | bool
  tags: fp_syslogd_debug
  vars:
    msg: |-
      fp_syslogd_enabled: {{ fp_syslogd_enabled }}
      fp_syslogd_rcconf:
        {{ fp_syslogd_rcconf | to_yaml(indent=2) | indent(2) }}
      fp_syslogd_conf_orig: {{ fp_syslogd_conf_orig }}
      fp_syslogd_conf:
        {{ fp_syslogd_conf | to_yaml(indent=2) | indent(2) }}
      fp_syslogd_confd:
        {{ fp_syslogd_confd | to_yaml(indent=2) | indent(2) }}
      fp_syslogd_newconf_orig: {{ fp_syslogd_newconf_orig }}
      fp_syslogd_newconf:
        {{ fp_syslogd_newconf | to_yaml(indent=2) | indent(2) }}
      fp_syslogd_newconfd:
        {{ fp_syslogd_newconfd | to_yaml(indent=2) | indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: Configure /etc/rc.conf
  tags: fp_syslogd_rcconf
  block:

    - name: "Syslogd: Configure /etc/rc.conf"
      notify: restart syslogd
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*{{ item.key }}\s*=(.*)$
        line: '{{ item.key }}="{{ item.value }}"'
        backup: "{{ fp_backup }}"
      loop: "{{ fp_syslogd_rcconf }}"

    - name: "Syslogd: Enable and start syslogd"
      when: fp_syslogd_enabled | bool
      notify: enable and start syslogd
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*syslogd_enable\s*=(.*)$
        line: syslogd_enable="YES"
        backup: "{{ fp_backup }}"

    - name: "Syslogd: Disable and stop syslogd"
      when: not fp_syslogd_enabled | bool
      notify: disable and stop syslogd
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*syslogd_enable\s*=(.*)$
        line: syslogd_enable="NO"
        backup: "{{ fp_backup }}"

- name: Configure syslogd
  tags: fp_syslogd_conf
  block:

    - name: "Syslogd: Backup origin /etc/syslog.conf"
      when: fp_syslogd_conf_orig | bool
      ansible.builtin.command:
        cmd: cp /etc/syslog.conf /etc/syslog.conf.orig
        creates: /etc/syslog.conf.orig

    - name: "Syslogd: Configure /etc/syslog.conf"
      when: fp_syslogd_conf | length > 0
      notify: reload syslogd
      ansible.builtin.template:
        src: syslog.conf.j2
        dest: /etc/syslog.conf
        owner: root
        group: wheel
        mode: "0644"
        backup: "{{ fp_backup }}"

    - name: "Syslogd: Create files in /etc/syslog.d/"
      notify: reload syslogd
      ansible.builtin.template:
        src: "{{ item.template }}"
        dest: /etc/syslog.d/{{ item.path }}
        owner: root
        group: wheel
        mode: "0644"
        backup: "{{ fp_backup }}"
      loop: "{{ fp_syslogd_confd }}"
      loop_control:
        label: "{{ item.path }}"
      vars:
        fp_syslogd_conf: "{{ item.conf }}"

- name: Configure newsyslog
  tags: fp_syslogd_newconfd
  block:

    - name: "Syslogd: Backup origin /etc/newsyslog.conf"
      when: fp_syslogd_newconf_orig | bool
      ansible.builtin.command:
        cmd: cp /etc/newsyslog.conf /etc/newsyslog.conf.orig
        creates: /etc/newsyslog.conf.orig

    - name: "Syslogd: Configure /etc/newsyslog.conf"
      when: fp_syslogd_newconf | length > 0
      notify: create newsyslog
      ansible.builtin.template:
        src: newsyslog.conf.j2
        dest: /etc/newsyslog.conf
        owner: root
        group: wheel
        mode: "0644"
        backup: "{{ fp_backup }}"

    - name: "Syslogd: Create files in /etc/newsyslog.conf.d/"
      notify: create newsyslog
      vars:
        fp_syslogd_newconf: "{{ item.conf }}"
      ansible.builtin.template:
        src: "{{ item.template }}"
        dest: /etc/newsyslog.conf.d/{{ item.path }}
        owner: root
        group: wheel
        mode: "0644"
        backup: "{{ fp_backup }}"
      loop: "{{ fp_syslogd_newconfd }}"
      loop_control:
        label: "{{ item.path }}"

- name: "Syslogd: syslogd {{ state }}"
  tags: fp_syslogd_service
  vars:
    state: "{{ fp_syslogd_enabled | bool | ternary('started', 'stopped') }}"
  ansible.builtin.service:
    name: syslogd
    state: "{{ state }}"

# EOF
