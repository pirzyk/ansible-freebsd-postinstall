---
- name: "Hosts: Debug fp_hosts_debug={{ fp_hosts_debug }}"
  when: fp_hosts_debug | bool
  tags: fp_hosts_debug
  vars:
    msg: |-
      fp_hosts_sanity: {{ fp_hosts_sanity }}
      fp_hosts_sanity_valid_ip: {{ fp_hosts_sanity_valid_ip }}
      fp_hosts_sanity_unique_fqdn: {{ fp_hosts_sanity_unique_fqdn }}
      fp_hosts_sanity_valid_fqdn: {{ fp_hosts_sanity_valid_fqdn }}
      fp_hosts_fqdn_allow_underscores: {{ fp_hosts_fqdn_allow_underscores }}
      fp_hosts_conf_file: {{ fp_hosts_conf_file }}
      fp_hosts_conf_template: {{ fp_hosts_conf_template }}
      fp_hosts_localhost_ipv4: {{ fp_hosts_localhost_ipv4 }}
      fp_hosts_localhost_ipv6: {{ fp_hosts_localhost_ipv6 }}
      fp_hosts_conf:
        {{ fp_hosts_conf | to_yaml(indent=2) | indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: Sanity
  when: fp_hosts_sanity | bool
  tags: fp_hosts_sanity
  block:

    - name: "Hosts: Sanity valid IP"
      ansible.builtin.assert:
        that: ip_invalid is all
        fail_msg: "[ERR] Invalid IP address"
        success_msg: "[OK]  All IP addresses are valid."
      vars:
        ip_invalid: "{{ fp_hosts_conf | map(attribute='ip') | map('ansible.utils.ipaddr') }}"
      when: fp_hosts_sanity_valid_ip | bool

    - name: "Hosts: Sanity unique FQDN"
      ansible.builtin.assert:
        that: fqdn_no | length == fqdn_no | unique | length
        fail_msg: "[ERR] FQDN not unique."
        success_msg: "[OK]  All FQDN are unique."
      vars:
        fqdn_no: "{{ fp_hosts_conf | map(attribute='fqdn') | list }}"
      when: fp_hosts_sanity_unique_fqdn | bool

    - name: "Hosts: Sanity valid FQDN"
      ansible.builtin.assert:
        that: fqdn_invalid | length == 0
        fail_msg: "[ERR] Invalid FQDN: {{ fqdn_invalid }}"
        success_msg: "[OK]  All FQDN are valid."
      vars:
        fqdn_invalid: "{{ fp_hosts_conf |
                          map(attribute='fqdn') |
                          reject('community.general.fqdn_valid', allow_underscores=fp_hosts_fqdn_allow_underscores) }}"
      when: fp_hosts_sanity_valid_fqdn | bool

- name: "Hosts: Configure hosts in {{ fp_hosts_conf_file }}"
  tags: fp_hosts_conf
  ansible.builtin.template:
    src: "{{ fp_hosts_conf_template }}"
    dest: "{{ fp_hosts_conf_file }}"
    owner: root
    group: wheel
    mode: "0644"
    backup: "{{ fp_backup }}"

# EOF
